% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dat-to-arrow-formats.R
\name{dat_to_arrow_formats}
\alias{dat_to_arrow_formats}
\alias{dat_to_parquet}
\alias{dat_to_arrow}
\alias{dat_to_feather}
\title{Convert .dat.gz files into arrow formats}
\usage{
dat_to_arrow_formats(data_path, data_dict, output_dir, arrow_format,
  col_types = NULL, col_select = NULL, overwrite = TRUE, ...)

dat_to_parquet(...)

dat_to_arrow(...)

dat_to_feather(...)
}
\arguments{
\item{data_path}{A path to a \code{.dat.gz} file}

\item{data_dict}{A data.frame with \code{start}, \code{stop} and \code{name} columns}

\item{output_dir}{path to where you want to save the output file}

\item{arrow_format}{must be one of parquet, arrow or feather}

\item{col_types}{One of \code{NULL}, a \code{\link[readr:cols]{cols()}} specification, or
a string. See \code{vignette("readr")} for more details.

If \code{NULL}, all column types will be imputed from the first 1000 rows
on the input. This is convenient (and fast), but not robust. If the
imputation fails, you'll need to supply the correct types yourself.

If a column specification created by \code{\link[readr:cols]{cols()}}, it must contain
one column specification for each column. If you only want to read a
subset of the columns, use \code{\link[readr:cols_only]{cols_only()}}.

Alternatively, you can use a compact string representation where each
character represents one column:
c = character, i = integer, n = number, d = double,
l = logical, f = factor, D = date, T = date time, t = time, ? = guess, or
\code{_}/\code{-} to skip the column.}

\item{col_select}{A vector of column names}

\item{overwrite}{logical; should existing destination files be overwritten?}

\item{...}{passed to one or arrows writing functions depending on the value of \code{arrow_format}}
}
\description{
Function to convert into formats provided by Apache Arrow.
These functions will overwrite files of the same name by default.
Convenience wrappers are provided for each arrow format.
}
\section{Functions}{
\itemize{
\item \code{dat_to_parquet}: Convert to parquet

\item \code{dat_to_arrow}: Convert to arrow

\item \code{dat_to_feather}: Convert to feather
}}

